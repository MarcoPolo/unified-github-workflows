# This workflow is triggered by the dispatch workflow.

on:
  repository_dispatch:
    types: [ copy-workflow ]

jobs:
  copy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cfg: ${{ github.event.client_payload.targets }}
        file: ${{ github.event.client_payload.files }}
    env:
      TEMPLATE_REPO_DIR: "template-repo"
      TEMPLATE_DIR: "templates"
      FILE: "${{ matrix.file }}"
      NEEDS_UPDATE: 0
      # We overwrite these values if this is the first deployment of this file.
      COMMIT_MSG: "update ${{ matrix.file }}: ${{ github.event.client_payload.github_event.pull_request.title }}"
      PR_TITLE: "${{ matrix.file }}: ${{ github.event.client_payload.github_event.pull_request.title }}"
    name: Update ${{ matrix.file }} on ${{ matrix.cfg.target }}
    steps:
    - name: Checkout ${{ matrix.cfg.target }}
      uses: actions/checkout@v2
      with:
        repository: ${{ matrix.cfg.target }}
        token: ${{ secrets.WEB3BOT_GITHUB_TOKEN }}
        persist-credentials: true
    - name: Checkout template repository
      uses: actions/checkout@v2
      with:
        path: ${{ env.TEMPLATE_REPO_DIR }}
    - name: Add "DO NOT EDIT" header to ${{ env.FILE }}
      run: |
        tmp=$(mktemp)
        cat $TEMPLATE_REPO_DIR/$TEMPLATE_DIR/header.yml $TEMPLATE_REPO_DIR/$TEMPLATE_DIR/$FILE > $tmp
        mv $tmp $TEMPLATE_REPO_DIR/$TEMPLATE_DIR/$FILE
    - name: Check if an update to ${{ env.FILE }} is neccessary
      run: |
        if [[ ! -f "${{ env.FILE }}" ]]; then
          echo "First deployment of this file."
          echo 'COMMIT_MSG=add ${{ env.FILE }}' >> $GITHUB_ENV
          echo 'PR_TITLE=add ${{ env.FILE }}' >> $GITHUB_ENV
          echo "NEEDS_UPDATE=1" >> $GITHUB_ENV
          exit
        fi
        STATUS=$(cmp --silent $FILE $TEMPLATE_REPO_DIR/$TEMPLATE_DIR/$FILE; echo $?)
        if [[ $STATUS -ne 0 ]]; then
          echo "Update needed."
          echo "NEEDS_UPDATE=1" >> $GITHUB_ENV
        else
          echo "Files indentical. Skipping."
        fi
    - name: Copy ${{ env.FILE }} to target repo
      if: ${{ env.NEEDS_UPDATE == 1 }}
      run: |
        dir=$(dirname $FILE)
        mkdir -p $dir
        cp $TEMPLATE_REPO_DIR/$TEMPLATE_DIR/$FILE $dir
        rm -rf $TEMPLATE_REPO_DIR
    - name: Create Pull Request
      if: ${{ env.NEEDS_UPDATE == 1 }}
      uses: peter-evans/create-pull-request@052fc72b4198ba9fbc81b818c6e1859f747d49a8 #v3.8.2
      with:
        commit-message: ${{ env.COMMIT_MSG }}
        title: ${{ env.PR_TITLE }}
        body: |
          Change introduced by ${{ github.event.client_payload.github_event.pull_request.html_url }}.
          ---
          You can trigger a rebase by commenting `@web3-bot rebase`.
        token: ${{ secrets.WEB3BOT_GITHUB_TOKEN }}
        committer: web3-bot <web3-bot@users.noreply.github.com>
        author: web3-bot <web3-bot@users.noreply.github.com>
        branch: web3-bot/update-${{ matrix.file }}
        delete-branch: true
